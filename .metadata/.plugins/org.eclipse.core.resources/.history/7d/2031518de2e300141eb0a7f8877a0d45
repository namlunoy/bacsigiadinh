package com.th10.bacsigiadinh.tasks;

import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.util.ArrayList;
import java.util.List;

import org.apache.http.HttpResponse;
import org.apache.http.HttpStatus;
import org.apache.http.NameValuePair;
import org.apache.http.StatusLine;
import org.apache.http.client.ClientProtocolException;
import org.apache.http.client.HttpClient;
import org.apache.http.client.entity.UrlEncodedFormEntity;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.message.BasicNameValuePair;

import com.th10.bacsigiadinh.interfaces.MyCallback;

import android.os.AsyncTask;
import android.util.Log;

public class DownloadStringTask extends AsyncTask<String, Integer, String> {
	private MyCallback callback;

	public DownloadStringTask(MyCallback call) {
		this.callback = call;
	}

	@Override
	protected String doInBackground(String... URLs) {
		 // Creating HTTP client
        HttpClient httpClient = new DefaultHttpClient();
        // Creating HTTP Post
        HttpPost httpPost = new HttpPost("http://www.example.com/login");
 
        // Building post parameters
        // key and value pair
//        List<NameValuePair> nameValuePair = new ArrayList<NameValuePair>(2);
//        nameValuePair.add(new BasicNameValuePair("email", "user@gmail.com"));
//        nameValuePair.add(new BasicNameValuePair("message",
//                "Hi, trying Android HTTP post!"));
 
//        // Url Encoding the POST parameters
//        try {
//            httpPost.setEntity(new UrlEncodedFormEntity(nameValuePair));
//        } catch (UnsupportedEncodingException e) {
//            // writing error to Log
//            e.printStackTrace();
//        }
 
        // Making HTTP Request
        try {
            HttpResponse response = httpClient.execute(httpPost);
 
            // writing response to log
            Log.d("Http Response:", response.toString());
        } catch (ClientProtocolException e) {
            // writing exception to log
            e.printStackTrace();
        } catch (IOException e) {
            // writing exception to log
            e.printStackTrace();
 
        }
	}

	@Override
	protected void onPostExecute(String result) {
		callback.TaskDone(result);
		super.onPostExecute(result);
	}

}
